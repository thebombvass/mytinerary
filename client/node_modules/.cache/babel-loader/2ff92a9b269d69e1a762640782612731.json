{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LandingPage.js\";\nimport React, { Component } from 'react';\nimport '../assets/LandingPage.css';\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap'; //Components\n\nimport NavBar from './NavBar';\nimport PopularItineraries from './PopularItineraries'; //action imports\n\nimport { saveLoggedInUser } from '../store/actions/cityActions'; //lol you fucking idiot dont store isLoggedIn in central store \n//   (altho kinda weird it resets? look into that).\n//    store it in user collection. (I guess you need fetch calls everywhere tho? hm)\n\nclass LandingPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      backgroundStyle: {\n        backgroundImage: 'url()'\n      }\n    };\n  }\n\n  async componentDidMount() {\n    //when you first log in, store the token \n    if (window.location.hash.length > 0) {\n      console.log('first time logging in, youre here'); //store token in local and log\n\n      localStorage.setItem('token', window.location.hash.slice(1));\n      let token = localStorage.getItem('token');\n      console.log(token); //decode token and log\n\n      let decoded = jwt_decode(token);\n      console.log(decoded); //push decoded token info in central store for current user\n\n      let currentProfPicUrl = decoded.avatarPicture;\n      let currentUsername = decoded.username;\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl)); //get rid of hash ?\n\n      window.history.pushState(\"\", document.title, window.location.pathname + window.location.search); //if youre returning\n    } else if (localStorage.getItem('token')) {\n      console.log('yes there is a token, youre returning');\n      let token = localStorage.getItem('token');\n      console.log(token); //decode token and log\n\n      let decoded = jwt_decode(token);\n      console.log(decoded); //push decoded token info in central store for current user\n\n      let currentProfPicUrl = decoded.avatarPicture;\n      let currentUsername = decoded.username;\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl));\n    } else {\n      console.log('No token, youre not logged in');\n    }\n\n    let backgroundImageArray = ['https://images.unsplash.com/photo-1574673520260-3a5209b775fa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80', 'https://images.unsplash.com/photo-1562869035-7c0e05adf020?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1566910399550-7117f25645c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1300&q=80', 'https://images.unsplash.com/photo-1509129336695-afe9e7d11ae5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1431976047936-b672e11eea4b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1266&q=80', 'https://images.unsplash.com/photo-1498623116890-37e912163d5d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1470290282174-30ea78123183?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80', 'https://images.unsplash.com/photo-1497262693247-aa258f96c4f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=624&q=80', 'https://images.unsplash.com/photo-1506126483163-f4d1558dbf85?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=700&q=80', ''];\n    let arrarr = ['https://images.unsplash.com/photo-1552483777-6d0e5cc7e09f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=656&q=80'];\n    let randIndex = Math.floor(Math.random() * arrarr.length);\n    let currentBackgroundImage = arrarr[randIndex];\n    this.setState({\n      backgroundStyle: {\n        backgroundImage: 'url(' + currentBackgroundImage + ')'\n      }\n    }); //end of componentDidMount\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"LandingPage\",\n      style: this.state.backgroundStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"MYtinerary\")), React.createElement(Container, {\n      className: \"centerLandingPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"TagLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Find your perfect trip, designed by insiders who know and love their cities.\")), React.createElement(Row, {\n      className: \"landingPageOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"landingPageOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/ios/50/000000/city-buildings.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/cities\",\n      className: \"textFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Browse\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Cities\"))), React.createElement(Col, {\n      xs: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"landingPageOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"textFont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Create\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"Itinerary\"), React.createElement(\"img\", {\n      src: \"https://img.icons8.com/ios/50/000000/wish-list.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUsername: state.cities.currentUsername,\n    currentProfPicUrl: state.cities.currentProfPicUrl\n  };\n};\n\nexport default connect(mapStateToProps)(LandingPage);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LandingPage.js"],"names":["React","Component","jwt_decode","connect","Link","Container","Row","Col","NavBar","PopularItineraries","saveLoggedInUser","LandingPage","state","backgroundStyle","backgroundImage","componentDidMount","window","location","hash","length","console","log","localStorage","setItem","slice","token","getItem","decoded","currentProfPicUrl","avatarPicture","currentUsername","username","props","dispatch","history","pushState","document","title","pathname","search","backgroundImageArray","arrarr","randIndex","Math","floor","random","currentBackgroundImage","setState","render","mapStateToProps","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../assets/LandingPage.css';\nimport jwt_decode from 'jwt-decode'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom';\nimport { Container, Row, Col,  } from 'reactstrap';\n\n//Components\nimport NavBar from './NavBar'\nimport PopularItineraries from './PopularItineraries'\n\n//action imports\nimport { saveLoggedInUser } from '../store/actions/cityActions';\n\n\n//lol you fucking idiot dont store isLoggedIn in central store \n//   (altho kinda weird it resets? look into that).\n//    store it in user collection. (I guess you need fetch calls everywhere tho? hm)\n\nclass LandingPage extends Component {\n\n  state = {\n    backgroundStyle: {\n      backgroundImage: 'url()',\n      },\n  }\n\n  async componentDidMount() {\n    //when you first log in, store the token \n    if (window.location.hash.length>0) {\n      console.log('first time logging in, youre here')\n      //store token in local and log\n      localStorage.setItem('token', window.location.hash.slice(1))\n      let token = localStorage.getItem('token')\n      console.log(token)\n      \n      //decode token and log\n      let decoded = jwt_decode(token)\n      console.log(decoded)\n      \n      //push decoded token info in central store for current user\n      let currentProfPicUrl = decoded.avatarPicture\n      let currentUsername = decoded.username\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl))\n\n      //get rid of hash ?\n      window.history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n    \n    //if youre returning\n    } else if(localStorage.getItem('token')) {\n\n      console.log('yes there is a token, youre returning')\n      let token = localStorage.getItem('token')\n      console.log(token)\n      \n      //decode token and log\n      let decoded = jwt_decode(token)\n      console.log(decoded)\n      \n      //push decoded token info in central store for current user\n      let currentProfPicUrl = decoded.avatarPicture\n      let currentUsername = decoded.username\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl))\n\n    } else {\n      console.log('No token, youre not logged in')\n    }\n\n    let backgroundImageArray = ['https://images.unsplash.com/photo-1574673520260-3a5209b775fa?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80', 'https://images.unsplash.com/photo-1562869035-7c0e05adf020?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1566910399550-7117f25645c5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1300&q=80', 'https://images.unsplash.com/photo-1509129336695-afe9e7d11ae5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1431976047936-b672e11eea4b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1266&q=80', 'https://images.unsplash.com/photo-1498623116890-37e912163d5d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=634&q=80', 'https://images.unsplash.com/photo-1470290282174-30ea78123183?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=675&q=80', 'https://images.unsplash.com/photo-1497262693247-aa258f96c4f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=624&q=80', 'https://images.unsplash.com/photo-1506126483163-f4d1558dbf85?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=700&q=80', '']\n    let arrarr = ['https://images.unsplash.com/photo-1552483777-6d0e5cc7e09f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=656&q=80']\n    let randIndex = Math.floor(Math.random()*arrarr.length)\n    let currentBackgroundImage = arrarr[randIndex]\n\n    this.setState({\n      backgroundStyle: {\n        backgroundImage: 'url('+currentBackgroundImage+')',\n        },\n    })\n      \n    //end of componentDidMount\n  }\n\n  render() {\n\n      return (\n        <div className=\"LandingPage\" style={this.state.backgroundStyle}>\n            <NavBar></NavBar>\n            <div className=\"logo\">\n              <h1>MYtinerary</h1>\n            </div>\n            <Container className=\"centerLandingPage\">\n              <p className=\"TagLine\">Find your perfect trip, designed by insiders who know and love their cities.</p>\n            </Container>\n            <Row className=\"landingPageOptions\">\n              <Col xs=\"5\">\n                <div className=\"landingPageOption\">\n                  <img src=\"https://img.icons8.com/ios/50/000000/city-buildings.png\"></img>\n                  <Link to=\"/cities\" className=\"textFont\">Browse<br></br>Cities</Link>\n                </div>\n              </Col>\n              <Col xs=\"2\">\n              </Col>\n              <Col xs=\"5\">\n                <div className=\"landingPageOption\">\n                  <Link className=\"textFont\">Create<br></br>Itinerary</Link>\n                  <img src=\"https://img.icons8.com/ios/50/000000/wish-list.png\"></img>\n                </div>\n              </Col>\n            </Row>\n            {/* <StartBrowsing /> */}\n            {/* <p className=\"PopularHeader\">Popular MYtineraries:</p>\n            <PopularItineraries></PopularItineraries> */}\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      currentUsername: state.cities.currentUsername,\n      currentProfPicUrl: state.cities.currentProfPicUrl,\n  }\n}\n\nexport default connect(mapStateToProps)(LandingPage)"]},"metadata":{},"sourceType":"module"}