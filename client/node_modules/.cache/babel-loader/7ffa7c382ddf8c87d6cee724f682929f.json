{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'; //components\n\nimport ItineraryCover from './ItineraryCover.js';\nimport NavBar from './NavBar.js';\n\nclass OneCityMultiItin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itinerariesData: [],\n      loadinghere: true,\n      cityImageStyle: {}\n    };\n  }\n\n  async componentDidMount() {\n    const thisCityUrl = window.location.pathname.slice(13); //To Do: is this used anywhere????\n\n    let cityName = \"\";\n\n    for (var i = 0; i < thisCityUrl.length; i++) {\n      if (thisCityUrl.charAt(i) === \"%\") {\n        cityName += \" \";\n        i += 2;\n      } else {\n        cityName += thisCityUrl.charAt(i);\n      }\n    }\n\n    await fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13)).then(async response => {\n      this.state.itinerariesData = await response.json();\n      console.log(this.state.itinerariesData);\n      this.setState({\n        loadinghere: false\n      });\n      this.props.cities.forEach(city => {\n        if (city.name == cityName) {\n          this.setState({\n            cityImageStyle: {\n              backgroundImage: 'url(' + city.imageUrl + ')'\n            }\n          });\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"singleCityCover\",\n      style: this.state.cityImageStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Activities:\"), React.createElement(\"div\", {\n      horizontal: true,\n      className: \"horizontalScroll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.loadinghere ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"loading...\") : this.state.itinerariesData.map(({\n      id,\n      title,\n      profPicUrl\n    }) => React.createElement(\"div\", {\n      className: \"horizontalScrollDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ItineraryCover, {\n      key: id,\n      imageUrl: profPicUrl,\n      styleInfo: \"OneCityMultiItin\",\n      cityName: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Itineraries:\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities\n  };\n};\n\nexport default connect(mapStateToProps)(OneCityMultiItin);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","CSSTransition","TransitionGroup","connect","ItineraryCover","NavBar","OneCityMultiItin","state","itinerariesData","loadinghere","cityImageStyle","componentDidMount","thisCityUrl","window","location","pathname","slice","cityName","i","length","charAt","fetch","then","response","json","console","log","setState","props","cities","forEach","city","name","backgroundImage","imageUrl","catch","err","render","map","id","title","profPicUrl","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'\n//components\nimport ItineraryCover from './ItineraryCover.js'\nimport NavBar from './NavBar.js'\n\n\nclass OneCityMultiItin extends Component {\n\n    state = {\n        itinerariesData: [],\n        loadinghere: true,\n        cityImageStyle: {},\n      }\n      \n\n    async componentDidMount() {\n        const thisCityUrl = window.location.pathname.slice(13)\n        //To Do: is this used anywhere????\n        let cityName = \"\"\n        for (var i=0; i < thisCityUrl.length; i++) {\n            if (thisCityUrl.charAt(i) === \"%\") {\n                cityName += \" \";\n                i += 2;\n            } else {\n                cityName += thisCityUrl.charAt(i);\n            }\n        }\n        await fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13))\n            .then(async(response)=> {\n                this.state.itinerariesData = await response.json()\n                console.log(this.state.itinerariesData)\n                this.setState({loadinghere: false})\n                this.props.cities.forEach((city) => {\n                    if(city.name == cityName) {\n                        this.setState({cityImageStyle: \n                        {\n                            backgroundImage: 'url('+city.imageUrl+')'\n                        }\n                        })\n                    }\n                })\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n      }    \n\n    render() {\n        return(\n            <div>\n            <NavBar></NavBar>\n            <div id=\"singleCityCover\" style={this.state.cityImageStyle}>\n\n            </div>\n            <Container>\n                <h4>Activities:</h4>\n                <div horizontal className=\"horizontalScroll\">\n                {this.state.loadinghere ? <p>loading...</p> : \n                    this.state.itinerariesData.map(({ id, title, profPicUrl }) => (\n                        <div className=\"horizontalScrollDiv\">\n                        <ItineraryCover\n                        key={id}\n                        imageUrl = {profPicUrl}\n                        styleInfo={\"OneCityMultiItin\"}\n                        cityName={title}\n                        ></ItineraryCover>\n                        </div>\n                    ))}\n                </div>\n                <h4>Itineraries:</h4>\n            </Container>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      cities: state.cities.cities,\n    }\n  }\n\nexport default connect(mapStateToProps)(OneCityMultiItin)\n"]},"metadata":{},"sourceType":"module"}