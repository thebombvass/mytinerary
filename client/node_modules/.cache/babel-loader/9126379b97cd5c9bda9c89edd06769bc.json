{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'; //components\n\nimport PostResource from './PostResource'; //action imports\n\nimport { filterCities } from '../store/actions/cityActions';\n\nclass Cities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      newCity: \"\",\n      newCountry: \"\",\n      newUrl: \"\"\n    };\n    this.clearFields = this.clearFields.bind(this);\n  }\n\n  async componentDidMount() {\n    console.log(this.props.loading);\n    this.timer = setInterval(() => console.log('ok'), 5000);\n  }\n\n  async updateSearch(e) {\n    await this.setState({\n      search: e.target.value\n    });\n    const searchResults = this.props.cities.filter(city => {\n      return city.name.indexOf(this.state.search) !== -1;\n    });\n    this.props.store.dispatch(filterCities(searchResults));\n  }\n\n  async updateNewCity(e) {\n    await this.setState({\n      newCity: e.target.value\n    });\n  }\n\n  async updateNewCountry(e) {\n    await this.setState({\n      newCountry: e.target.value\n    });\n  }\n\n  async updateNewUrl(e) {\n    await this.setState({\n      newUrl: e.target.value\n    });\n  }\n\n  clearFields() {\n    console.log('here');\n    this.setState({\n      newCity: \"\"\n    });\n    this.setState({\n      newCountry: \"\"\n    });\n    this.setState({\n      newUrl: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Add City: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newCity,\n      onChange: this.updateNewCity.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" \", React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" Country: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newCountry,\n      onChange: this.updateNewCountry.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Image URL: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newUrl,\n      onChange: this.updateNewUrl.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/cities\",\n      dataObject: {\n        \"name\": this.state.newCity,\n        \"country\": this.state.newCountry,\n        \"imageUrl\": this.state.newUrl\n      },\n      action: this.clearFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Search List: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"dark\" // onClick={()=> {}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" Search\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(TransitionGroup, {\n      className: \"cities-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.filteredResults.map(({\n      id,\n      name,\n      country\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, country)))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities,\n    status: state.cities.status,\n    loading: state.cities.loading,\n    filteredResults: state.cities.filteredResults\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterSearch: searchResults => dispatch(filterCities(searchResults))\n  };\n};\n\nexport default connect(mapStateToProps)(Cities);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/Cities.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","connect","PostResource","filterCities","Cities","constructor","props","state","search","newCity","newCountry","newUrl","clearFields","bind","componentDidMount","console","log","loading","timer","setInterval","updateSearch","e","setState","target","value","searchResults","cities","filter","city","name","indexOf","store","dispatch","updateNewCity","updateNewCountry","updateNewUrl","render","filteredResults","map","id","country","mapStateToProps","status","mapDispatchToProps","filterSearch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux'\n\n//components\nimport PostResource from './PostResource';\n\n//action imports\nimport { filterCities } from '../store/actions/cityActions';\n\nclass Cities extends Component {\n  constructor(props) {\n    super(props)\n\n    this.clearFields = this.clearFields.bind(this);\n\n  }\n\n  state = {\n    search: \"\",\n    newCity: \"\",\n    newCountry: \"\",\n    newUrl: \"\",\n  }\n  \n  async componentDidMount() {\n    console.log(this.props.loading)\n    this.timer = setInterval(()=> console.log('ok'), 5000)\n  }\n\n  async updateSearch(e) {\n    await this.setState({search: e.target.value});\n    const searchResults = this.props.cities.filter( (city) =>{\n      return city.name.indexOf(this.state.search) !== -1;\n    })\n    this.props.store.dispatch(filterCities(searchResults))\n  }\n\n  async updateNewCity(e) {\n    await this.setState({newCity: e.target.value});\n  }\n\n  async updateNewCountry(e) {\n    await this.setState({newCountry: e.target.value});\n  }\n\n  async updateNewUrl(e) {\n    await this.setState({newUrl: e.target.value});\n  }\n\n  clearFields() {\n    console.log('here')\n    this.setState({newCity: \"\"});\n    this.setState({newCountry: \"\"});\n    this.setState({newUrl: \"\"});\n  }\n\n\n  render() {\n    return (\n      <Container>\n\n        <h1>Cities</h1>\n\n        <label htmlFor=\"searchBar\"> Add City: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newCity} onChange={this.updateNewCity.bind(this)}></input>\n        <br></br> <label htmlFor=\"searchBar\"> Country: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newCountry} onChange={this.updateNewCountry.bind(this)}></input>\n        <br></br><label htmlFor=\"searchBar\"> Image URL: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newUrl} onChange={this.updateNewUrl.bind(this)}></input>\n        <br></br>\n        \n        <PostResource \n          url=\"http://localhost:5000/api/cities\" \n          dataObject={{\"name\": this.state.newCity, \"country\": this.state.newCountry, \"imageUrl\": this.state.newUrl}} \n          action={this.clearFields}\n          >  \n        </PostResource>\n        \n        <br></br>\n        <label htmlFor=\"searchBar\"> Search List: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.search} onChange={this.updateSearch.bind(this)}></input>\n        <Button color=\"dark\" \n            // onClick={()=> {}\n            > Search</Button>\n\n        <ListGroup>\n          {this.props.loading ? <p>loading...</p> : \n          <TransitionGroup className=\"cities-list\">\n            {this.props.filteredResults.map(({ id, name, country }) => (\n              <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <p>{name}</p><p>{country}</p>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    cities: state.cities.cities,\n    status: state.cities.status,\n    loading: state.cities.loading,\n    filteredResults: state.cities.filteredResults,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterSearch: searchResults => dispatch(filterCities(searchResults))\n  }\n}\n\n\nexport default connect(mapStateToProps)(Cities)"]},"metadata":{},"sourceType":"module"}