{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PostResource.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux'; //import actions needed below\n\nimport { clearNewCityFields, getCities } from '../store/actions/cityActions';\n\nclass PostResource extends Component {\n  async makePost(url, dataObject) {\n    console.log('inside post');\n    this.props.dispatch(clearNewCityFields());\n    console.log('working');\n    await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataObject)\n    }).then(res => res.json()).then(data => console.log(data), alert('City created!')).catch(err => console.log(err));\n    this.props.dispatch(getCities());\n  }\n\n  testFunction(url, dataObject) {\n    console.log('test');\n    this.props.dispatch(clearNewCityFields());\n    console.log(\"URL: \" + url);\n    console.log(\"data object\");\n    console.log(dataObject);\n  }\n\n  setItinUrl() {\n    var cityUrlName = \"\";\n\n    for (var i = 0; i < this.props.newCity.length; i++) {\n      if (this.props.newCity.charAt(i) == \" \") {\n        cityUrlName += \"%20\";\n      } else {\n        cityUrlName += this.props.newCity.charAt(i);\n      }\n    }\n\n    console.log(cityUrlName);\n    var itinUrl = window.location.protocol + \"//\" + window.location.hostname + \":\" + window.location.port + \"/itineraries/\" + cityUrlName;\n    console.log(itinUrl);\n    return itinUrl;\n  }\n\n  citiesDataObjectCreator(url) {\n    const itinUrl = this.setItinUrl();\n    const dataObject = {\n      \"name\": this.props.newCity,\n      \"country\": this.props.newCountry,\n      \"imageUrl\": this.props.newUrl,\n      \"itinerariesUrl\": itinUrl\n    };\n    this.makePost(url, dataObject);\n  }\n\n  render() {\n    return React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        console.log('click');\n        const url = this.props.url;\n        this.citiesDataObjectCreator(); // this.testFunction(url,dataObject)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    newCity: state.cities.newCity,\n    newCountry: state.cities.newCountry,\n    newUrl: state.cities.newUrl\n  };\n};\n\nexport default connect(mapStateToProps)(PostResource);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PostResource.js"],"names":["React","Component","Button","connect","clearNewCityFields","getCities","PostResource","makePost","url","dataObject","console","log","props","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","data","alert","catch","err","testFunction","setItinUrl","cityUrlName","i","newCity","length","charAt","itinUrl","window","location","protocol","hostname","port","citiesDataObjectCreator","newCountry","newUrl","render","marginBottom","mapStateToProps","state","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux'\n//import actions needed below\nimport { clearNewCityFields, getCities, } from '../store/actions/cityActions';\n\n\n\nclass PostResource extends Component {    \n\n    async makePost(url, dataObject) {\n        console.log('inside post')\n        this.props.dispatch(clearNewCityFields())\n        console.log('working')\n        await fetch(url, {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(dataObject)\n        }).then(res => res.json())\n        .then(data => console.log(data), alert('City created!'))\n        .catch(err => console.log(err))\n\n    this.props.dispatch(getCities())\n   }\n\n   testFunction(url, dataObject) {\n       console.log('test')\n        this.props.dispatch(clearNewCityFields())\n        console.log(\"URL: \" + url);\n        console.log(\"data object\");\n        console.log(dataObject);\n   }\n\n    setItinUrl() {\n        var cityUrlName = \"\" \n\n        for (var i=0; i < this.props.newCity.length; i++) {\n            if (this.props.newCity.charAt(i) == \" \") {\n                cityUrlName += \"%20\";\n            } else {\n                cityUrlName += this.props.newCity.charAt(i);\n            }\n        }\n        console.log(cityUrlName)\n        var itinUrl = window.location.protocol + \"//\"+window.location.hostname+\":\"+window.location.port+ \"/itineraries/\"+cityUrlName\n        console.log(itinUrl)\n\n        return itinUrl;\n   }\n\n   citiesDataObjectCreator(url) {\n    const itinUrl = this.setItinUrl();\n    const dataObject = {\"name\": this.props.newCity, \"country\": this.props.newCountry, \"imageUrl\": this.props.newUrl, \"itinerariesUrl\": itinUrl}\n    this.makePost(url, dataObject);\n   }\n\n    render(){\n        return (\n            <Button \n            color=\"dark\" \n            style={{marginBottom: '2rem'}}\n            onClick={()=> {\n                console.log('click')\n                const url = this.props.url;\n                this.citiesDataObjectCreator()\n                // this.testFunction(url,dataObject)\n            }}\n            >Submit</Button>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        newCity: state.cities.newCity,\n        newCountry: state.cities.newCountry,\n        newUrl: state.cities.newUrl,\n    }\n  }\n\nexport default connect(mapStateToProps)(PostResource)"]},"metadata":{},"sourceType":"module"}