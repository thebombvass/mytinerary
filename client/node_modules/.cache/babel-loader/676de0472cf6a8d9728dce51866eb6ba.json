{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux'; //components\n\nimport ItineraryCover from './ItineraryCover.js';\n\nclass OneCityMultiItin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itinerariesData: {}\n    };\n  }\n\n  async componentDidMount() {\n    const thisCityUrl = window.location.pathname.slice(13);\n    var cityName = \"\";\n\n    for (var i = 0; i < thisCityUrl.length; i++) {\n      if (thisCityUrl.charAt(i) == \"%20\") {\n        cityName += \" \";\n      } else {\n        cityName += thisCityUrl.charAt(i);\n      }\n    }\n\n    fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13)).then(async response => {\n      const itinerariesData = await response.json();\n      console.log(itinerariesData);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(TransitionGroup, {\n      className: \"cities-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.filteredResults.map(({\n      id,\n      name,\n      country,\n      imageUrl,\n      itinerariesUrl\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: itinerariesUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ItineraryCover, {\n      imageUrl: imageUrl,\n      styleInfo: \"CitiesList\",\n      cityName: name + \", \" + country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities\n  };\n};\n\nexport default connect(mapStateToProps)(OneCityMultiItin);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js"],"names":["React","Component","Container","Row","Col","connect","ItineraryCover","OneCityMultiItin","state","itinerariesData","componentDidMount","thisCityUrl","window","location","pathname","slice","cityName","i","length","charAt","fetch","then","response","json","console","log","catch","err","render","props","loading","filteredResults","map","id","name","country","imageUrl","itinerariesUrl","mapStateToProps","cities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAqC,YAArC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAGA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCO,KAFqC,GAE7B;AACJC,MAAAA,eAAe,EAAE;AADb,KAF6B;AAAA;;AAOrC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,EAA/B,CAApB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGN,WAAW,CAACO,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIN,WAAW,CAACQ,MAAZ,CAAmBF,CAAnB,KAAyB,KAA7B,EAAoC;AAChCD,QAAAA,QAAQ,IAAI,GAAZ;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,IAAIL,WAAW,CAACQ,MAAZ,CAAmBF,CAAnB,CAAZ;AACH;AACJ;;AACDG,IAAAA,KAAK,CAAC,2CAA2CR,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,EAA/B,CAA5C,CAAL,CACKM,IADL,CACU,MAAMC,QAAN,IAAkB;AACpB,YAAMb,eAAe,GAAG,MAAMa,QAAQ,CAACC,IAAT,EAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAZ;AACH,KAJL,EAKKiB,KALL,CAKYC,GAAD,IAAQ;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAPL;AAQD;;AAEHC,EAAAA,MAAM,GAAG;AAGL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,KAAKC,KAAL,CAAWC,OAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB,GACD,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,eAAX,CAA2BC,GAA3B,CAA+B,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,KAAD,KAC9B,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEJ,EAApB;AAAwB,MAAA,OAAO,EAAE,GAAjC;AAAsC,MAAA,UAAU,EAAC,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAG,MAAA,IAAI,EAAEI,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,cAAD;AACA,MAAA,QAAQ,EAAID,QADZ;AAEA,MAAA,SAAS,EAAE,YAFX;AAGA,MAAA,QAAQ,EAAEF,IAAI,GAAG,IAAP,GAAcC,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,CADF,CADD,CADH,CAFM,CADJ,CADJ;AAuBH;;AArDoC;;AAyDzC,MAAMG,eAAe,GAAI9B,KAAD,IAAW;AAC/B,SAAO;AACL+B,IAAAA,MAAM,EAAE/B,KAAK,CAAC+B,MAAN,CAAaA;AADhB,GAAP;AAGD,CAJH;;AAMA,eAAelC,OAAO,CAACiC,eAAD,CAAP,CAAyB/B,gBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, } from 'reactstrap';\nimport { connect } from 'react-redux'\n//components\nimport ItineraryCover from './ItineraryCover.js'\n\n\nclass OneCityMultiItin extends Component {\n\n    state = {\n        itinerariesData: {}\n      }\n      \n\n    async componentDidMount() {\n        const thisCityUrl = window.location.pathname.slice(13)\n        var cityName = \"\"\n        for (var i=0; i < thisCityUrl.length; i++) {\n            if (thisCityUrl.charAt(i) == \"%20\") {\n                cityName += \" \";\n            } else {\n                cityName += thisCityUrl.charAt(i);\n            }\n        }\n        fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13))\n            .then(async(response)=> {\n                const itinerariesData = await response.json()\n                console.log(itinerariesData)\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n      }    \n\n    render() {\n        \n\n        return(\n            <Container>\n                <ListGroup>\n          {this.props.loading ? <p>loading...</p> : \n          <TransitionGroup className=\"cities-list\">\n            {this.props.filteredResults.map(({ id, name, country, imageUrl, itinerariesUrl}) => (\n              <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                <a href={itinerariesUrl}>\n                <ItineraryCover\n                imageUrl = {imageUrl}\n                styleInfo={\"CitiesList\"}\n                cityName={name + \", \" + country}\n                ></ItineraryCover>\n                </a>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n          }\n        </ListGroup>\n            </Container>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      cities: state.cities.cities,\n    }\n  }\n\nexport default connect(mapStateToProps)(OneCityMultiItin)\n"]},"metadata":{},"sourceType":"module"}