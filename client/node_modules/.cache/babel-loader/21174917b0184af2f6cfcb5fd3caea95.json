{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; //components\n\nimport NavBar from './NavBar.js';\nimport PostResource from './PostResource.js'; //action imports\n\nimport { setEmail, setPassword } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showEmailSignIn: false\n    };\n\n    this.switch = () => {};\n  }\n\n  async updateEmail(e) {\n    this.props.dispatch(setEmail(e.target.value));\n  }\n\n  async updatePassword(e) {\n    this.props.dispatch(setPassword(e.target.value));\n  }\n\n  getGoogleConsent() {\n    window.location.href = \"http://localhost:5000/api/users/google\";\n  }\n\n  componentToggle(num) {\n    if (num === 0) {\n      console.log('Back');\n    } else if (num === 1) {\n      console.log('Google'); //this should be getGoogleConsent()\n    } else if (num === 2) {\n      this.setState(prevState => ({\n        showEmailSignIn: !prevState.showEmailSignIn\n      }));\n      console.log('Email');\n    } else if (num === 3) {\n      console.log('Create Account');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"logInHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/user.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Log In\")), React.createElement(Container, {\n      id: \"signInButtonsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"signInWithGoogle\",\n      onClick: () => {\n        // this.getGoogleConsent()\n        this.componentToggle(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/48/000000/google-logo.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \"Log in with Google\"), React.createElement(Button, {\n      id: \"signInWithEmail\",\n      className: \"display\",\n      onClick: this.switch // onClick={()=> {\n      //     // this.getGoogleConsent()\n      //     this.componentToggle(2)\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/24/000000/secured-letter.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), \"Log in with email\"), React.createElement(Button, {\n      id: \"createAccountWithEmail\",\n      onClick: () => {\n        // this.getGoogleConsent()\n        this.componentToggle(3);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/add-user-male.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"Create new account with email\"), React.createElement(CSSTransition, {\n      in: this.state.showEmailSignIn,\n      timeout: 400,\n      classNames: \"list-transition\",\n      unmountOnExit: true,\n      appear: true,\n      onEntered: this.listSwitch,\n      onExit: this.listSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"i.e. example@example.com\",\n      value: this.props.email,\n      onChange: this.updateEmail.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.props.password,\n      onChange: this.updatePassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Passwords must be no less than 8 characters.\")), React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/users/login\",\n      parentComp: \"logIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.cities.email,\n    password: state.cities.password\n  };\n};\n\nexport default connect(mapStateToProps)(LogIn);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js"],"names":["React","Component","Form","FormGroup","Label","Input","FormText","Container","Button","connect","CSSTransition","TransitionGroup","NavBar","PostResource","setEmail","setPassword","LogIn","state","showEmailSignIn","switch","updateEmail","e","props","dispatch","target","value","updatePassword","getGoogleConsent","window","location","href","componentToggle","num","console","log","setState","prevState","render","listSwitch","email","bind","password","mapStateToProps","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container, Button } from 'reactstrap';\nimport { connect } from 'react-redux'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n//components\nimport NavBar from './NavBar.js'\nimport PostResource from './PostResource.js';\n\n//action imports\nimport { setEmail, setPassword, } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n\n    state = {\n        showEmailSignIn: false,\n      };\n    \n    switch = () => {\n        \n    };\n\n    async updateEmail(e) {\n        this.props.dispatch(setEmail(e.target.value))\n    }\n    \n    async updatePassword(e) {\n        this.props.dispatch(setPassword(e.target.value))\n    }\n\n    getGoogleConsent() {\n        window.location.href = \"http://localhost:5000/api/users/google\"\n    }\n\n    componentToggle(num) {\n        if (num === 0) {\n            console.log('Back')\n        } else if (num ===1) {\n            console.log('Google')\n            //this should be getGoogleConsent()\n        } else if (num ===2) {\n            this.setState(prevState => ({\n                showEmailSignIn: !prevState.showEmailSignIn\n            }));\n            console.log('Email')\n        } else if (num ===3) {\n            console.log('Create Account')\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <NavBar></NavBar>\n                <Container className=\"logInHeader\">\n                    <img src=\"https://img.icons8.com/android/24/000000/user.png\"></img>\n                    <h2>Log In</h2>\n                </Container>\n                <Container id=\"signInButtonsContainer\">\n                <Button id =\"signInWithGoogle\"\n                onClick={()=> {\n                    // this.getGoogleConsent()\n                    this.componentToggle(1)\n                }}\n                >\n                    <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"></img>\n                    Log in with Google\n                </Button>\n                <Button id=\"signInWithEmail\"\n                className=\"display\" onClick={this.switch}\n                // onClick={()=> {\n                //     // this.getGoogleConsent()\n                //     this.componentToggle(2)\n                // }}\n                >\n                    <img src=\"https://img.icons8.com/color/24/000000/secured-letter.png\"></img>\n                    Log in with email\n                </Button>\n                <Button id=\"createAccountWithEmail\"\n                onClick={()=> {\n                    // this.getGoogleConsent()\n                    this.componentToggle(3)\n                }}\n                >\n                    <img src=\"https://img.icons8.com/android/24/000000/add-user-male.png\"></img>\n                    Create new account with email\n                </Button>\n\n                <CSSTransition\n                in={this.state.showEmailSignIn}\n                timeout={400}\n                classNames=\"list-transition\"\n                unmountOnExit\n                appear\n                onEntered={this.listSwitch}\n                onExit={this.listSwitch}\n                >\n                <div className=\"list-body\">\n                <Form>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"i.e. example@example.com\" value ={this.props.email} onChange={this.updateEmail.bind(this)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" value ={this.props.password} onChange={this.updatePassword.bind(this)} />\n                        <FormText color=\"muted\">\n                            Passwords must be no less than 8 characters.\n                        </FormText>\n                    </FormGroup>\n                    <PostResource\n                        url=\"http://localhost:5000/api/users/login\"\n                        parentComp = \"logIn\"\n                        >\n                    </PostResource>\n                </Form>\n                </div>\n                </CSSTransition>\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        email: state.cities.email,\n        password: state.cities.password,\n    }\n  }\n\nexport default connect(mapStateToProps)(LogIn)\n"]},"metadata":{},"sourceType":"module"}