{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LandingPage.js\";\nimport React, { Component } from 'react';\nimport MYtineraryLogo from '../assets/MYtineraryLogo.png';\nimport '../assets/LandingPage.css';\nimport jwt_decode from 'jwt-decode';\nimport { connect } from 'react-redux'; //Components\n\nimport StartBrowsing from './StartBrowsing';\nimport NavBar from './NavBar';\nimport PopularItineraries from './PopularItineraries'; //action imports\n\nimport { saveLoggedInUser } from '../store/actions/cityActions'; //lol you fucking idiot dont store isLoggedIn in central store \n//   (altho kinda weird it resets? look into that).\n//    store it in user collection. (I guess you need fetch calls everywhere tho? hm)\n\nclass LandingPage extends Component {\n  async componentDidMount() {\n    console.log('hello'); //when you first log in, store the token \n\n    if (window.location.hash.length > 0) {\n      console.log('first time logging in, youre here'); //store token in local and log\n\n      localStorage.setItem('token', window.location.hash.slice(1));\n      let token = localStorage.getItem('token');\n      console.log(token); //decode token and log\n\n      let decoded = jwt_decode(token);\n      console.log(decoded); //push decoded token info in central store for current user\n\n      let currentProfPicUrl = decoded.avatarPicture;\n      let currentUsername = decoded.username;\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl)); //get rid of hash ?\n\n      window.history.pushState(\"\", document.title, window.location.pathname + window.location.search); //if youre returning\n    } else if (localStorage.getItem('token')) {\n      console.log('yes there is a token, youre returning');\n      let token = localStorage.getItem('token');\n      console.log(token); //decode token and log\n\n      let decoded = jwt_decode(token);\n      console.log(decoded); //push decoded token info in central store for current user\n\n      let currentProfPicUrl = decoded.avatarPicture;\n      let currentUsername = decoded.username;\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl));\n    } else {\n      console.log('No token, youre not logged in');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: MYtineraryLogo,\n      className: \"Mytinerary-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"TagLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Find your perfect trip, designed by insiders who know and love their cities.\"), React.createElement(StartBrowsing, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"PopularHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Popular MYtineraries:\"), React.createElement(PopularItineraries, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUsername: state.cities.currentUsername,\n    currentProfPicUrl: state.cities.currentProfPicUrl\n  };\n};\n\nexport default connect(mapStateToProps)(LandingPage);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LandingPage.js"],"names":["React","Component","MYtineraryLogo","jwt_decode","connect","StartBrowsing","NavBar","PopularItineraries","saveLoggedInUser","LandingPage","componentDidMount","console","log","window","location","hash","length","localStorage","setItem","slice","token","getItem","decoded","currentProfPicUrl","avatarPicture","currentUsername","username","props","dispatch","history","pushState","document","title","pathname","search","render","mapStateToProps","state","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MYtineraryLogo from '../assets/MYtineraryLogo.png'\nimport '../assets/LandingPage.css';\nimport jwt_decode from 'jwt-decode'\nimport { connect } from 'react-redux'\n\n\n//Components\nimport StartBrowsing from './StartBrowsing'\nimport NavBar from './NavBar'\nimport PopularItineraries from './PopularItineraries'\n\n//action imports\nimport { saveLoggedInUser } from '../store/actions/cityActions';\n\n\n//lol you fucking idiot dont store isLoggedIn in central store \n//   (altho kinda weird it resets? look into that).\n//    store it in user collection. (I guess you need fetch calls everywhere tho? hm)\n\nclass LandingPage extends Component {\n\n  async componentDidMount() {\n    console.log('hello')\n    //when you first log in, store the token \n    if (window.location.hash.length>0) {\n      console.log('first time logging in, youre here')\n      //store token in local and log\n      localStorage.setItem('token', window.location.hash.slice(1))\n      let token = localStorage.getItem('token')\n      console.log(token)\n      \n      //decode token and log\n      let decoded = jwt_decode(token)\n      console.log(decoded)\n      \n      //push decoded token info in central store for current user\n      let currentProfPicUrl = decoded.avatarPicture\n      let currentUsername = decoded.username\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl))\n\n      //get rid of hash ?\n      window.history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n    \n    //if youre returning\n    } else if(localStorage.getItem('token')) {\n\n      console.log('yes there is a token, youre returning')\n      let token = localStorage.getItem('token')\n      console.log(token)\n      \n      //decode token and log\n      let decoded = jwt_decode(token)\n      console.log(decoded)\n      \n      //push decoded token info in central store for current user\n      let currentProfPicUrl = decoded.avatarPicture\n      let currentUsername = decoded.username\n      await this.props.dispatch(saveLoggedInUser(currentUsername, currentProfPicUrl))\n\n    } else {\n      console.log('No token, youre not logged in')\n    }\n  } \n\n  render() {\n\n      return (\n        <div className=\"App\">\n            <NavBar></NavBar>\n            <img src={MYtineraryLogo} className=\"Mytinerary-logo\" alt=\"logo\" />\n            <p className=\"TagLine\">Find your perfect trip, designed by insiders who know and love their cities.</p>\n            <StartBrowsing />\n            <p className=\"PopularHeader\">Popular MYtineraries:</p>\n            <PopularItineraries></PopularItineraries>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      currentUsername: state.cities.currentUsername,\n      currentProfPicUrl: state.cities.currentProfPicUrl,\n  }\n}\n\nexport default connect(mapStateToProps)(LandingPage)"]},"metadata":{},"sourceType":"module"}