{"ast":null,"code":"export const fetchCitiesAction = {\n  type: 'FETCH_CITIES_REQUEST',\n  response: \"request being made.\"\n};\nexport const fetchCitiesActionSuccess = {\n  type: 'FETCH_CITIES_REQUEST',\n  response: \"something\"\n};\nexport const fetchCitiesActionFailure = {\n  type: 'FETCH_CITIES_REQUEST',\n  error: \"Error message - request for cities failed\"\n}; // export const RECEIVE_CITIES = 'RECEIVE_CITIES'\n\nconst RECEIVE_CITIES = 'RECEIVE_CITIES';\n\nfunction receiveCities(json) {\n  return {\n    type: RECEIVE_CITIES,\n    cities: json.data.children.map(child => child.data),\n    receivedAt: Date.now()\n  };\n}","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/store/actions/cityActions.js"],"names":["fetchCitiesAction","type","response","fetchCitiesActionSuccess","fetchCitiesActionFailure","error","RECEIVE_CITIES","receiveCities","json","cities","data","children","map","child","receivedAt","Date","now"],"mappings":"AACA,OAAO,MAAMA,iBAAiB,GAAG;AAACC,EAAAA,IAAI,EAAE,sBAAP;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAA1B;AACP,OAAO,MAAMC,wBAAwB,GAAG;AAACF,EAAAA,IAAI,EAAE,sBAAP;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAAjC;AACP,OAAO,MAAME,wBAAwB,GAAG;AAACH,EAAAA,IAAI,EAAE,sBAAP;AAA+BI,EAAAA,KAAK,EAAE;AAAtC,CAAjC,C,CAEP;;AACA,MAAMC,cAAc,GAAG,gBAAvB;;AAGA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO;AACLP,IAAAA,IAAI,EAAEK,cADD;AAELG,IAAAA,MAAM,EAAED,IAAI,CAACE,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBC,KAAK,IAAIA,KAAK,CAACH,IAAtC,CAFH;AAGLI,IAAAA,UAAU,EAAEC,IAAI,CAACC,GAAL;AAHP,GAAP;AAKD","sourcesContent":["\nexport const fetchCitiesAction = {type: 'FETCH_CITIES_REQUEST', response: \"request being made.\"}\nexport const fetchCitiesActionSuccess = {type: 'FETCH_CITIES_REQUEST', response: \"something\"}\nexport const fetchCitiesActionFailure = {type: 'FETCH_CITIES_REQUEST', error: \"Error message - request for cities failed\"}\n\n// export const RECEIVE_CITIES = 'RECEIVE_CITIES'\nconst RECEIVE_CITIES = 'RECEIVE_CITIES'\n\n\nfunction receiveCities(json) {\n  return {\n    type: RECEIVE_CITIES,\n    cities: json.data.children.map(child => child.data),\n    receivedAt: Date.now()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}