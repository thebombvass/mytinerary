{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PostResource.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux'; //import actions needed below\n\nimport { clearNewCityFields, getCities, clearNewUserFields } from '../store/actions/cityActions';\n\nclass PostResource extends Component {\n  async makePost(url, dataObject) {\n    console.log('inside post');\n    this.props.dispatch(clearNewCityFields());\n    this.props.dispatch(clearNewUserFields()); //clear create account fields??\n\n    console.log('working');\n    await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataObject)\n    }).then(res => res.json()) //TO DO: need to only alert created on success\n    // also errors arent showing up. \n    // Specifically for creating an account, if your password doesn't meet the recs and it fails it should notify the suer of that\n    //TO DO: okay also for login you can't say created.. dynamic message? \n    .then(data => {\n      if (data.message) {\n        alert(data.message);\n      }\n\n      console.log(data);\n\n      if (data.token) {\n        window.location.replace('http://localhost:3000/#' + data.token);\n      }\n    }).catch(err => console.log(err));\n    this.props.dispatch(getCities());\n  }\n\n  testFunction(url, dataObject) {\n    console.log('test');\n    this.props.dispatch(clearNewCityFields());\n    this.props.dispatch(clearNewUserFields());\n    console.log(\"URL: \" + url);\n    console.log(\"data object\");\n    console.log(dataObject);\n  }\n\n  setItinUrl() {\n    var cityUrlName = \"\";\n\n    for (var i = 0; i < this.props.newCity.length; i++) {\n      if (this.props.newCity.charAt(i) === \" \") {\n        cityUrlName += \"%20\";\n      } else {\n        cityUrlName += this.props.newCity.charAt(i);\n      }\n    }\n\n    console.log(cityUrlName);\n    var itinUrl = window.location.protocol + \"//\" + window.location.hostname + \":\" + window.location.port + \"/itineraries/\" + cityUrlName;\n    console.log(itinUrl);\n    return itinUrl;\n  } //The click event logic will chose which kind of data we are sending using the parent component indication from props\n  //    and then come here. This is also where testFunction can be uncommented and used as opposed to makePost\n  //   in case you need to test this component and info it is sending without actually sending anything to the db\n  //NOTE: IF YOU TEST, REMEMBER TO UNCOMMENT MAKEPOST WHEN DONE FOR ALL FUNCTIONS BELOW\n  //if using this for Cities Post\n\n\n  citiesDataObjectCreator(url) {\n    const itinUrl = this.setItinUrl();\n    const dataObject = {\n      \"name\": this.props.newCity,\n      \"country\": this.props.newCountry,\n      \"imageUrl\": this.props.newUrl,\n      \"itinerariesUrl\": itinUrl\n    };\n    this.makePost(url, dataObject); // this.testFunction(url, dataObject)\n  } //if using this for Create Account Post \n\n\n  createAccountDataObjectCreator(url) {\n    console.log(this.props.newPassword);\n    console.log(this.props.newPassword.length > 8);\n    console.log(this.props.newEmail);\n    console.log(this.props.newEmail.length > 0); //validate that email exists and that password is appropriate length\n\n    if (this.props.newPassword.length > 8 && this.props.newEmail.length > 0) {\n      const dataObject = {\n        \"email\": this.props.newEmail,\n        \"password\": this.props.newPassword,\n        \"profPicUrl\": this.props.newProfPicUrl\n      };\n      this.makePost(url, dataObject);\n    } else {\n      alert('Your account was not created. Please ensure you have both password and email fields filled out and that your password is longer than 8 characters.');\n    } // this.testFunction(url, dataObject)\n\n  }\n\n  logInDataObjectCreator(url) {\n    const dataObject = {\n      \"email\": this.props.email,\n      \"password\": this.props.password\n    };\n    this.makePost(url, dataObject); // this.testFunction(url, dataObject)\n  }\n\n  render() {\n    return React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        console.log('click');\n        const url = this.props.url;\n\n        if (this.props.parentComp === \"cities\") {\n          this.citiesDataObjectCreator(url);\n        } else if (this.props.parentComp === \"createAccount\") {\n          this.createAccountDataObjectCreator(url);\n        } else if (this.props.parentComp === \"logIn\") {\n          this.logInDataObjectCreator(url);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Submit\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    newCity: state.cities.newCity,\n    newCountry: state.cities.newCountry,\n    newUrl: state.cities.newUrl,\n    newEmail: state.cities.newEmail,\n    newPassword: state.cities.newPassword,\n    newProfPicUrl: state.cities.newProfPicUrl,\n    email: state.cities.email,\n    password: state.cities.password\n  };\n};\n\nexport default connect(mapStateToProps)(PostResource);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PostResource.js"],"names":["React","Component","Button","connect","clearNewCityFields","getCities","clearNewUserFields","PostResource","makePost","url","dataObject","console","log","props","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","data","message","alert","token","window","location","replace","catch","err","testFunction","setItinUrl","cityUrlName","i","newCity","length","charAt","itinUrl","protocol","hostname","port","citiesDataObjectCreator","newCountry","newUrl","createAccountDataObjectCreator","newPassword","newEmail","newProfPicUrl","logInDataObjectCreator","email","password","render","marginBottom","parentComp","mapStateToProps","state","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { connect } from 'react-redux'\n//import actions needed below\nimport { clearNewCityFields, getCities,clearNewUserFields } from '../store/actions/cityActions';\n\n\n\nclass PostResource extends Component {    \n\n    async makePost(url, dataObject) {\n        console.log('inside post')\n        this.props.dispatch(clearNewCityFields())\n        this.props.dispatch(clearNewUserFields())\n        //clear create account fields??\n        console.log('working')\n        await fetch(url, {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(dataObject)\n        }).then(res => res.json())\n        //TO DO: need to only alert created on success\n        // also errors arent showing up. \n        // Specifically for creating an account, if your password doesn't meet the recs and it fails it should notify the suer of that\n        \n        //TO DO: okay also for login you can't say created.. dynamic message? \n        .then(data => {\n            if(data.message) {\n                alert(data.message)\n            }\n            console.log(data)\n            if(data.token) {\n                window.location.replace('http://localhost:3000/#' + data.token)\n            }\n        })\n        .catch(err => console.log(err))\n\n    this.props.dispatch(getCities())\n    }\n\n    testFunction(url, dataObject) {\n        console.log('test')\n        this.props.dispatch(clearNewCityFields())\n        this.props.dispatch(clearNewUserFields())\n        console.log(\"URL: \" + url);\n        console.log(\"data object\");\n        console.log(dataObject);\n    }\n\n    setItinUrl() {\n        var cityUrlName = \"\" \n\n        for (var i=0; i < this.props.newCity.length; i++) {\n            if (this.props.newCity.charAt(i) === \" \") {\n                cityUrlName += \"%20\";\n            } else {\n                cityUrlName += this.props.newCity.charAt(i);\n            }\n        }\n        console.log(cityUrlName)\n        var itinUrl = window.location.protocol + \"//\"+window.location.hostname+\":\"+window.location.port+ \"/itineraries/\"+cityUrlName\n        console.log(itinUrl)\n\n        return itinUrl;\n    }\n\n    //The click event logic will chose which kind of data we are sending using the parent component indication from props\n    //    and then come here. This is also where testFunction can be uncommented and used as opposed to makePost\n    //   in case you need to test this component and info it is sending without actually sending anything to the db\n    //NOTE: IF YOU TEST, REMEMBER TO UNCOMMENT MAKEPOST WHEN DONE FOR ALL FUNCTIONS BELOW\n\n    //if using this for Cities Post\n    citiesDataObjectCreator(url) {\n        const itinUrl = this.setItinUrl();\n        const dataObject = {\"name\": this.props.newCity, \"country\": this.props.newCountry, \"imageUrl\": this.props.newUrl, \"itinerariesUrl\": itinUrl}\n        this.makePost(url, dataObject);\n        // this.testFunction(url, dataObject)\n    }\n\n    //if using this for Create Account Post \n    createAccountDataObjectCreator(url) {\n        console.log(this.props.newPassword)\n        console.log(this.props.newPassword.length>8)\n        console.log(this.props.newEmail)\n        console.log(this.props.newEmail.length>0)\n        //validate that email exists and that password is appropriate length\n        if (this.props.newPassword.length>8 && this.props.newEmail.length>0) {\n            const dataObject = {\"email\": this.props.newEmail, \"password\": this.props.newPassword, \"profPicUrl\": this.props.newProfPicUrl}\n            this.makePost(url, dataObject);\n        } else {\n            alert('Your account was not created. Please ensure you have both password and email fields filled out and that your password is longer than 8 characters.')\n        }\n        // this.testFunction(url, dataObject)\n    }\n\n    logInDataObjectCreator(url) {\n        const dataObject = {\"email\": this.props.email, \"password\": this.props.password}\n        this.makePost(url, dataObject);\n        // this.testFunction(url, dataObject)\n    }\n\n\n    render(){\n        return (\n            <Button \n            color=\"dark\" \n            style={{marginBottom: '2rem'}}\n            onClick={()=> {\n                console.log('click')\n                const url = this.props.url;\n                if(this.props.parentComp === \"cities\") {\n                    this.citiesDataObjectCreator(url)\n                } else if (this.props.parentComp === \"createAccount\") {\n                    this.createAccountDataObjectCreator(url)\n                } else if (this.props.parentComp === \"logIn\") {\n                    this.logInDataObjectCreator(url)\n                }\n            }}\n            >Submit</Button>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        newCity: state.cities.newCity,\n        newCountry: state.cities.newCountry,\n        newUrl: state.cities.newUrl,\n        newEmail: state.cities.newEmail,\n        newPassword: state.cities.newPassword,\n        newProfPicUrl: state.cities.newProfPicUrl,\n        email: state.cities.email,\n        password: state.cities.password\n    }\n  }\n\nexport default connect(mapStateToProps)(PostResource)"]},"metadata":{},"sourceType":"module"}