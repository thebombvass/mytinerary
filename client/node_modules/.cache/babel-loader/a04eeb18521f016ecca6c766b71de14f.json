{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container } from 'reactstrap';\nimport { connect } from 'react-redux'; //components\n\nimport NavBar from './NavBar.js';\nimport PostResource from './PostResource.js'; //action imports\n\nimport { setEmail, setPassword, setProfPicUrl } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n  //all these below gotta change\n  async updateEmail(e) {// this.props.dispatch(setNewEmail(e.target.value))\n  }\n\n  async updatePassword(e) {\n    if (e.target.value.length >= 8) {// this.props.dispatch(setNewPassword(e.target.value))\n    } else {// this.props.dispatch(setNewPassword(null))\n      }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Log In here:\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"i.e. example@example.com\",\n      value: this.props.newEmail,\n      onChange: this.updateNewEmail.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.props.newPassword,\n      onChange: this.updateNewPassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Passwords must be no less than 8 characters.\")), React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/users\",\n      parentComp: \"logIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    newEmail: state.cities.newEmail,\n    newPassword: state.cities.newPassword,\n    newProfPicUrl: state.cities.newProfPicUrl\n  };\n};\n\nexport default connect(mapStateToProps)(LogIn);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js"],"names":["React","Component","Form","FormGroup","Label","Input","FormText","Container","connect","NavBar","PostResource","setEmail","setPassword","setProfPicUrl","LogIn","updateEmail","e","updatePassword","target","value","length","render","props","newEmail","updateNewEmail","bind","newPassword","updateNewPassword","mapStateToProps","state","cities","newProfPicUrl"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container } from 'reactstrap';\nimport { connect } from 'react-redux'\n\n//components\nimport NavBar from './NavBar.js'\nimport PostResource from './PostResource.js';\n\n//action imports\nimport { setEmail, setPassword, setProfPicUrl, } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n\n    //all these below gotta change\n    async updateEmail(e) {\n        // this.props.dispatch(setNewEmail(e.target.value))\n      }\n    \n      async updatePassword(e) {\n        if(e.target.value.length >= 8) {\n            // this.props.dispatch(setNewPassword(e.target.value))\n        } else {\n            // this.props.dispatch(setNewPassword(null))\n        }\n      }\n\n    render() {\n        return(\n            <div>\n                <NavBar></NavBar>\n                <Container>\n                    <h2>Log In</h2>\n                    <p>Log In here:</p>\n                </Container>\n                <Container>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"i.e. example@example.com\" value ={this.props.newEmail} onChange={this.updateNewEmail.bind(this)} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" value ={this.props.newPassword} onChange={this.updateNewPassword.bind(this)} />\n                        <FormText color=\"muted\">\n                            Passwords must be no less than 8 characters.\n                        </FormText>\n                    </FormGroup>\n                    {/* <FormGroup>\n                        <Label for=\"exampleFile\">File</Label>\n                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                        <FormText color=\"muted\">\n                        This is some placeholder block-level help text for the above input.\n                        It's a bit lighter and easily wraps to a new line.\n                        </FormText>\n                    </FormGroup> */}\n                    <PostResource\n                        url=\"http://localhost:5000/api/users\"\n                        parentComp = \"logIn\"\n                        >\n                    </PostResource>\n                </Form>\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        newEmail: state.cities.newEmail,\n        newPassword: state.cities.newPassword,\n        newProfPicUrl: state.cities.newProfPicUrl,\n    }\n  }\n\nexport default connect(mapStateToProps)(LogIn)\n"]},"metadata":{},"sourceType":"module"}