{"ast":null,"code":"// export const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// function receiveCities(json) {\n//   return {\n//     type: RECEIVE_CITIES,\n//     cities: json.data.children.map(child => child.data),\n//     receivedAt: Date.now()\n//   }\n// }\nexport function getCities() {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/api/cities\").then(async response => {\n      const data = await response.json();\n      await dispatch(fetchCitiesAction(data));\n    }).catch(error => {\n      dispatch(fetchCitiesErrorAction(error));\n    });\n  };\n}\nexport function fetchCitiesAction(data) {\n  return {\n    type: 'FETCH_CITIES_REQUEST',\n    status: '200 OK',\n    response: data\n  };\n}\nexport function fetchCitiesErrorAction(error) {\n  return {\n    type: 'FETCH_CITIES_ERROR',\n    status: error,\n    response: \"\"\n  };\n}\nexport function filterCities(filteredResults) {\n  return {\n    type: 'FILTER_CITIES',\n    filteredResults: filteredResults\n  };\n}\nexport function setNewCity(cityName) {\n  return {\n    type: 'SET_NEW_CITY',\n    newCity: cityName\n  };\n}\nexport function setNewCountry(countryName) {\n  return {\n    type: 'SET_NEW_COUNTRY',\n    newCountry: countryName\n  };\n}\nexport function setNewUrl(newUrl) {\n  return {\n    type: 'SET_NEW_URL',\n    newUrl: newUrl\n  };\n}\nexport function clearNewCityFields() {\n  return {\n    type: 'CLEAR_NEW_CITY_FIELDS'\n  };\n}\nexport function setNewEmail(newEmail) {\n  return {\n    type: 'SET_NEW_EMAIL',\n    newEmail: newEmail\n  };\n}\nexport function setNewPassword(newPassword) {\n  return {\n    type: 'SET_NEW_PASSWORD',\n    newPassword: newPassword\n  };\n}\nexport function setNewProfPicUrl(newProfPicUrl) {\n  return {\n    type: 'SET_NEW_PROFPICURL',\n    newProfPicUrl: newProfPicUrl\n  };\n}\nexport function clearNewUserFields() {\n  return {\n    type: 'CLEAR_NEW_USER_FIELDS'\n  };\n}\nexport function setEmail(email) {\n  return {\n    type: 'SET_EMAIL',\n    email: email\n  };\n}\nexport function setPassword(password) {\n  return {\n    type: 'SET_PASSWORD',\n    password: psetNewUrlassword\n  };\n}\nexport function clearUserFields() {\n  return {\n    type: 'CLEAR_USER_FIELDS'\n  };\n}\nexport function saveLoggedInUser(currentUsername) {\n  return {\n    type: 'SAVE_LOGGED_IN_USER',\n    currentUsername: currentUsername,\n    currentProfPicUrl: currentProfPicUrl\n  };\n}","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/store/actions/cityActions.js"],"names":["getCities","dispatch","fetch","then","response","data","json","fetchCitiesAction","catch","error","fetchCitiesErrorAction","type","status","filterCities","filteredResults","setNewCity","cityName","newCity","setNewCountry","countryName","newCountry","setNewUrl","newUrl","clearNewCityFields","setNewEmail","newEmail","setNewPassword","newPassword","setNewProfPicUrl","newProfPicUrl","clearNewUserFields","setEmail","email","setPassword","password","psetNewUrlassword","clearUserFields","saveLoggedInUser","currentUsername","currentProfPicUrl"],"mappings":"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","sourcesContent":["// export const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// const RECEIVE_CITIES = 'RECEIVE_CITIES'\n\n\n// function receiveCities(json) {\n//   return {\n//     type: RECEIVE_CITIES,\n//     cities: json.data.children.map(child => child.data),\n//     receivedAt: Date.now()\n//   }\n// }\n\n\nexport function getCities() {\n    return(dispatch)=> {\n        return fetch(\"http://localhost:5000/api/cities\").then(async(response)=> {\n            const data = await response.json()\n            await dispatch(fetchCitiesAction(data))\n        })\n        .catch((error)=> {\n            dispatch(fetchCitiesErrorAction(error))\n        })\n    }\n  }\n\nexport function fetchCitiesAction(data) {\n    return {\n        type: 'FETCH_CITIES_REQUEST', \n        status: '200 OK', \n        response: data,\n    }\n}\n\nexport function fetchCitiesErrorAction(error) {\n    return {\n        type: 'FETCH_CITIES_ERROR', \n        status: error, \n        response: \"\",\n    }\n}\n\nexport function filterCities(filteredResults) {\n    return {\n        type: 'FILTER_CITIES', \n        filteredResults: filteredResults,\n    }\n}\n\nexport function setNewCity(cityName) {\n    return {\n        type: 'SET_NEW_CITY', \n        newCity: cityName,\n    }\n}\n\nexport function setNewCountry(countryName) {\n    return {\n        type: 'SET_NEW_COUNTRY', \n        newCountry: countryName,\n    }\n}\n\n\nexport function setNewUrl(newUrl) {\n    return {\n        type: 'SET_NEW_URL', \n        newUrl: newUrl,\n    }\n}\n\nexport function clearNewCityFields() {\n    return {\n        type: 'CLEAR_NEW_CITY_FIELDS'\n    }\n}\n\nexport function setNewEmail(newEmail) {\n    return {\n        type: 'SET_NEW_EMAIL', \n        newEmail: newEmail,\n    }\n}\n\nexport function setNewPassword(newPassword) {\n    return {\n        type: 'SET_NEW_PASSWORD', \n        newPassword: newPassword,\n    } \n}\n\nexport function setNewProfPicUrl(newProfPicUrl) {\n    return {\n        type: 'SET_NEW_PROFPICURL', \n        newProfPicUrl: newProfPicUrl,\n    }\n}\n\nexport function clearNewUserFields() {\n    return {\n        type: 'CLEAR_NEW_USER_FIELDS'\n    }\n}\n\nexport function setEmail(email) {\n    return {\n        type: 'SET_EMAIL', \n        email: email,\n    }\n}\n\nexport function setPassword(password) {\n    return {\n        type: 'SET_PASSWORD', \n        password: psetNewUrlassword,\n    } \n}\n\nexport function clearUserFields() {\n    return {\n        type: 'CLEAR_USER_FIELDS'\n    }\n}\n\nexport function saveLoggedInUser(currentUsername, ) {\n    return {\n        type: 'SAVE_LOGGED_IN_USER',\n        currentUsername: currentUsername,\n        currentProfPicUrl: currentProfPicUrl,\n    }\n}"]},"metadata":{},"sourceType":"module"}