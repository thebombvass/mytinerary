{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/Cities.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\nexport default class Cities extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      cities: null,\n      search: \"\",\n      filteredResults: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      cities: data\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  updateSearch(e) {\n    this.this.setState({\n      search: e.target.value\n    });\n    console.log(this.state.search);\n    this.setState({\n      filteredResults: this.state.cities.filter(city => {\n        return city.name.indexOf(this.state.search) !== -1;\n      })\n    });\n    console.log(this.state.filteredResults);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"dark\",\n      style: {\n        marginBottom: '2rem'\n      },\n      onClick: () => {\n        const name = prompt('Enter Item');\n\n        if (name) {\n          this.setState(state => ({\n            items: [...state.items, {\n              id: uuid(),\n              name\n            }]\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Add City\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(TransitionGroup, {\n      className: \"cities-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.cities.map(({\n      id,\n      name,\n      country\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, country)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/Cities.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","Cities","state","loading","cities","search","filteredResults","componentDidMount","url","response","fetch","data","json","console","log","setState","updateSearch","e","this","target","value","filter","city","name","indexOf","render","marginBottom","prompt","items","id","bind","map","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\n\nexport default class Cities extends Component {\n  state = {\n    loading: true,\n    cities: null,\n    search: \"\",\n    filteredResults: \"\"\n  }\n  \n  async componentDidMount() {\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({cities: data});\n    this.setState({loading: false});\n  }\n\n  updateSearch(e) {\n    this.\n    this.setState({search: e.target.value});\n    console.log(this.state.search);\n    this.setState({filteredResults: this.state.cities.filter( (city) =>{\n      return city.name.indexOf(this.state.search) !== -1;\n    })})\n    console.log(this.state.filteredResults)\n  }\n\n  render() {\n    return (\n      <Container>\n        <Button \n          color=\"dark\" \n          style={{marginBottom: '2rem'}}\n          onClick={()=> {\n            const name = prompt('Enter Item')\n            if(name) {\n              this.setState(state => ({\n                items: [...state.items, { id: uuid(), name }]\n              }));\n            }\n          }}\n        >Add City</Button>\n\n        <input type=\"text\" value ={this.state.search} onChange={this.updateSearch.bind(this)}></input>\n\n        <ListGroup>\n          {this.state.loading ? <p>loading...</p> : \n          <TransitionGroup className=\"cities-list\">\n            {this.state.cities.map(({ id, name, country }) => (\n              <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <p>{name}</p><p>{country}</p>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}