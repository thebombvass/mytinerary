{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux'; //components\n\nimport ItineraryCover from './ItineraryCover.js';\n\nclass OneCityMultiItin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itinerariesData: {}\n    };\n  }\n\n  async componentDidMount() {\n    const thisCityUrl = window.location.pathname.slice(13);\n    var cityName = \"\";\n\n    for (var i = 0; i < thisCityUrl.length; i++) {\n      if (thisCityUrl.charAt(i) == \"%20\") {\n        cityName += \" \";\n      } else {\n        cityName += thisCityUrl.charAt(i);\n      }\n    }\n\n    fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13)).then(async response => {\n      const itinerariesData = await response.json();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Hey ur on a page\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities\n  };\n};\n\nexport default connect(mapStateToProps)(OneCityMultiItin);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/OneCityMultiItin.js"],"names":["React","Component","Container","Row","Col","connect","ItineraryCover","OneCityMultiItin","state","itinerariesData","componentDidMount","thisCityUrl","window","location","pathname","slice","cityName","i","length","charAt","fetch","then","response","json","catch","err","console","log","render","mapStateToProps","cities"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAqC,YAArC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAGA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCO,KAFqC,GAE7B;AACJC,MAAAA,eAAe,EAAE;AADb,KAF6B;AAAA;;AAOrC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,EAA/B,CAApB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGN,WAAW,CAACO,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,UAAIN,WAAW,CAACQ,MAAZ,CAAmBF,CAAnB,KAAyB,KAA7B,EAAoC;AAChCD,QAAAA,QAAQ,IAAI,GAAZ;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,IAAIL,WAAW,CAACQ,MAAZ,CAAmBF,CAAnB,CAAZ;AACH;AACJ;;AACDG,IAAAA,KAAK,CAAC,2CAA2CR,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,EAA/B,CAA5C,CAAL,CACKM,IADL,CACU,MAAMC,QAAN,IAAkB;AACpB,YAAMb,eAAe,GAAG,MAAMa,QAAQ,CAACC,IAAT,EAA9B;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAQ;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KANL;AAOD;;AAEHG,EAAAA,MAAM,GAAG;AAGL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ;AAKH;;AAlCoC;;AAsCzC,MAAMC,eAAe,GAAIrB,KAAD,IAAW;AAC/B,SAAO;AACLsB,IAAAA,MAAM,EAAEtB,KAAK,CAACsB,MAAN,CAAaA;AADhB,GAAP;AAGD,CAJH;;AAMA,eAAezB,OAAO,CAACwB,eAAD,CAAP,CAAyBtB,gBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, } from 'reactstrap';\nimport { connect } from 'react-redux'\n//components\nimport ItineraryCover from './ItineraryCover.js'\n\n\nclass OneCityMultiItin extends Component {\n\n    state = {\n        itinerariesData: {}\n      }\n      \n\n    async componentDidMount() {\n        const thisCityUrl = window.location.pathname.slice(13)\n        var cityName = \"\"\n        for (var i=0; i < thisCityUrl.length; i++) {\n            if (thisCityUrl.charAt(i) == \"%20\") {\n                cityName += \" \";\n            } else {\n                cityName += thisCityUrl.charAt(i);\n            }\n        }\n        fetch(\"http://localhost:5000/api/itineraries/\" + window.location.pathname.slice(13))\n            .then(async(response)=> {\n                const itinerariesData = await response.json()\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n      }    \n\n    render() {\n        \n\n        return(\n            <Container>\n                <p>Hey ur on a page</p>\n            </Container>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      cities: state.cities.cities,\n    }\n  }\n\nexport default connect(mapStateToProps)(OneCityMultiItin)\n"]},"metadata":{},"sourceType":"module"}