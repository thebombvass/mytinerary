{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PopularItineraries.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux'; //components\n\nimport ItineraryCover from './ItineraryCover.js';\n\nclass PopularItineraries extends Component {\n  render() {\n    const cityCovers = [];\n\n    if (this.props.cities.length % 2 !== 0) {\n      const newLen = this.props.cities.length - 1;\n    } else {}\n\n    for (let i = 0; i < newLen; i += 2) {\n      console.log(i);\n      cityCovers.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i + 1].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i + 1].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    }\n\n    console.log(cityCovers);\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, cityCovers);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities\n  };\n};\n\nexport default connect(mapStateToProps)(PopularItineraries);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PopularItineraries.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","connect","ItineraryCover","PopularItineraries","render","cityCovers","props","cities","length","newLen","i","console","log","push","imageUrl","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,aAA/B,QAAoD,YAApD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAGA,MAAMC,kBAAN,SAAiCN,SAAjC,CAA2C;AAEvCO,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,EAAnB;;AAEA,QAAI,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,GAAyB,CAAzB,KAA8B,CAAlC,EAAqC;AACjC,YAAMC,MAAM,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,GAA2B,CAA1C;AACH,KAFD,MAEO,CAEN;;AAED,SAAK,IAAIE,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,MAAhB,EAAwBC,CAAC,IAAE,CAA3B,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAL,MAAAA,UAAU,CAACQ,IAAX,CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACA,QAAA,QAAQ,EAAI,KAAKP,KAAL,CAAWC,MAAX,CAAkBG,CAAlB,EAAqBI,QADjC;AAEA,QAAA,SAAS,EAAE,oBAFX;AAGA,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,MAAX,CAAkBG,CAAlB,EAAqBK,IAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAC,cAAD;AACA,QAAA,QAAQ,EAAI,KAAKT,KAAL,CAAWC,MAAX,CAAkBG,CAAC,GAAC,CAApB,EAAuBI,QADnC;AAEA,QAAA,SAAS,EAAE,oBAFX;AAGA,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,MAAX,CAAkBG,CAAC,GAAC,CAApB,EAAuBK,IAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAcH;;AAEDJ,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,UADL,CADJ;AAKH;;AApCsC;;AAwC3C,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLV,IAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaA;AADhB,GAAP;AAGD,CAJH;;AAMA,eAAeN,OAAO,CAACe,eAAD,CAAP,CAAyBb,kBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem } from 'reactstrap';\nimport { connect } from 'react-redux'\n//components\nimport ItineraryCover from './ItineraryCover.js'\n\n\nclass PopularItineraries extends Component {\n\n    render() {\n        const cityCovers = []\n\n        if (this.props.cities.length%2 !==0) {\n            const newLen = this.props.cities.length - 1\n        } else {\n            \n        }\n        \n        for (let i=0; i<newLen; i+=2) {\n            console.log(i)\n            cityCovers.push(\n                <div>\n                    <ItineraryCover\n                    imageUrl = {this.props.cities[i].imageUrl}\n                    styleInfo={\"PopularItineraries\"}\n                    cityName={this.props.cities[i].name}\n                    ></ItineraryCover>\n                    <ItineraryCover\n                    imageUrl = {this.props.cities[i+1].imageUrl}\n                    styleInfo={\"PopularItineraries\"}\n                    cityName={this.props.cities[i+1].name}\n                    ></ItineraryCover>\n                </div>\n            )\n        }\n\n        console.log(cityCovers)\n        \n        return(\n            <Container>\n                {cityCovers}\n            </Container>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      cities: state.cities.cities,\n    }\n  }\n\nexport default connect(mapStateToProps)(PopularItineraries)\n"]},"metadata":{},"sourceType":"module"}