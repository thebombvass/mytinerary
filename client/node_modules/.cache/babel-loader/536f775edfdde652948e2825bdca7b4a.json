{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; //components\n\nimport NavBar from './NavBar.js';\nimport PostResource from './PostResource.js'; //action imports\n\nimport { setNewEmail, setNewPassword, setNewProfPicUrl, setEmail, setPassword } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showEmailSignIn: false,\n      show\n    };\n  }\n\n  async updateEmail(e) {\n    this.props.dispatch(setEmail(e.target.value));\n  }\n\n  async updatePassword(e) {\n    this.props.dispatch(setPassword(e.target.value));\n  }\n\n  async updateNewEmail(e) {\n    this.props.dispatch(setNewEmail(e.target.value));\n  }\n\n  async updateNewPassword(e) {\n    this.props.dispatch(setNewPassword(e.target.value));\n  }\n\n  async updateNewProfPicUrl(e) {\n    this.props.dispatch(setNewProfPicUrl(e.target.value));\n  }\n\n  getGoogleConsent() {\n    window.location.href = \"http://localhost:5000/api/users/google\";\n  }\n\n  componentToggle(num) {\n    if (num === 0) {\n      if (this.state.showEmailSignIn === true) {\n        this.setState(prevState => ({\n          showEmailSignIn: !prevState.showEmailSignIn\n        }));\n      }\n\n      console.log('Back');\n    } else if (num === 1) {\n      console.log('Google'); //this should be getGoogleConsent()\n    } else if (num === 2) {\n      this.setState(prevState => ({\n        showEmailSignIn: !prevState.showEmailSignIn\n      }));\n      console.log('Email');\n    } else if (num === 3) {\n      console.log('Create Account');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"logInHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/user.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Log In\")), React.createElement(Container, {\n      id: \"signInButtonsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"signInWithGoogle\",\n      onClick: () => {\n        // this.getGoogleConsent()\n        this.componentToggle(1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/48/000000/google-logo.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), \"Log in with Google\"), React.createElement(Button, {\n      id: \"signInWithEmail\",\n      onClick: () => {\n        // this.getGoogleConsent()\n        this.componentToggle(2);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/color/24/000000/secured-letter.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Log in with email\"), React.createElement(Button, {\n      id: \"createAccountWithEmail\",\n      onClick: () => {\n        // this.getGoogleConsent()\n        this.componentToggle(3);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/add-user-male.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Create new account with email\"), React.createElement(CSSTransition, {\n      in: this.state.showEmailSignIn,\n      timeout: 400,\n      classNames: \"list-transition\",\n      unmountOnExit: true,\n      appear: true,\n      onEntered: this.listSwitch,\n      onExit: this.listSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"logInBackButton\",\n      onClick: () => {\n        this.componentToggle(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/back.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \"Back\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"i.e. example@example.com\",\n      value: this.props.email,\n      onChange: this.updateEmail.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.props.password,\n      onChange: this.updatePassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Passwords must be no less than 8 characters.\")), React.createElement(\"div\", {\n      id: \"emailLogInSubmitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/users/login\",\n      parentComp: \"logIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))))), React.createElement(CSSTransition, {\n      in: this.state.showEmailSignIn,\n      timeout: 400,\n      classNames: \"list-transition\",\n      unmountOnExit: true,\n      appear: true,\n      onEntered: this.listSwitch,\n      onExit: this.listSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"logInBackButton\",\n      onClick: () => {\n        this.componentToggle(0);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://img.icons8.com/android/24/000000/back.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), \"Back\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Fill out the form below to create an account.\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"i.e. example@example.com\",\n      value: this.props.newEmail,\n      onChange: this.updateNewEmail.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      value: this.props.newPassword,\n      onChange: this.updateNewPassword.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Passwords must be no less than 8 characters.\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"profpic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Profile Picture\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"profpic\",\n      id: \"profpic\",\n      placeholder: \"please add it as a url\",\n      value: this.props.newProfPicUrl,\n      onChange: this.updateNewProfPicUrl.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/users/create\",\n      parentComp: \"createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    email: state.cities.email,\n    password: state.cities.password,\n    newEmail: state.cities.newEmail,\n    newPassword: state.cities.newPassword,\n    newProfPicUrl: state.cities.newProfPicUrl\n  };\n};\n\nexport default connect(mapStateToProps)(LogIn);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/LogIn.js"],"names":["React","Component","Form","FormGroup","Label","Input","FormText","Container","Button","connect","CSSTransition","TransitionGroup","NavBar","PostResource","setNewEmail","setNewPassword","setNewProfPicUrl","setEmail","setPassword","LogIn","state","showEmailSignIn","show","updateEmail","e","props","dispatch","target","value","updatePassword","updateNewEmail","updateNewPassword","updateNewProfPicUrl","getGoogleConsent","window","location","href","componentToggle","num","setState","prevState","console","log","render","listSwitch","email","bind","password","newEmail","newPassword","newProfPicUrl","mapStateToProps","cities"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, FormText, Container, Button } from 'reactstrap';\nimport { connect } from 'react-redux'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n//components\nimport NavBar from './NavBar.js'\nimport PostResource from './PostResource.js';\n\n//action imports\nimport { setNewEmail, setNewPassword, setNewProfPicUrl, setEmail, setPassword, } from '../store/actions/cityActions';\n\nclass LogIn extends Component {\n\n    state = {\n        showEmailSignIn: false,\n        show\n      };\n\n    async updateEmail(e) {\n        this.props.dispatch(setEmail(e.target.value))\n    }\n    \n    async updatePassword(e) {\n        this.props.dispatch(setPassword(e.target.value))\n    }\n\n    async updateNewEmail(e) {\n        this.props.dispatch(setNewEmail(e.target.value))\n      }\n    \n      async updateNewPassword(e) {\n        this.props.dispatch(setNewPassword(e.target.value))\n      }\n\n      async updateNewProfPicUrl(e) {\n        this.props.dispatch(setNewProfPicUrl(e.target.value))\n      }\n\n    getGoogleConsent() {\n        window.location.href = \"http://localhost:5000/api/users/google\"\n    }\n\n    componentToggle(num) {\n        if (num === 0) {\n            if(this.state.showEmailSignIn===true) {\n                this.setState(prevState => ({\n                    showEmailSignIn: !prevState.showEmailSignIn\n                }));\n            }\n            console.log('Back')\n        } else if (num ===1) {\n            console.log('Google')\n            //this should be getGoogleConsent()\n        } else if (num ===2) {\n            this.setState(prevState => ({\n                showEmailSignIn: !prevState.showEmailSignIn\n            }));\n            console.log('Email')\n        } else if (num ===3) {\n            console.log('Create Account')\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <NavBar></NavBar>\n                <Container className=\"logInHeader\">\n                    <img src=\"https://img.icons8.com/android/24/000000/user.png\"></img>\n                    <h2>Log In</h2>\n                </Container>\n                <Container id=\"signInButtonsContainer\">\n                <Button id =\"signInWithGoogle\"\n                onClick={()=> {\n                    // this.getGoogleConsent()\n                    this.componentToggle(1)\n                }}\n                >\n                    <img src=\"https://img.icons8.com/color/48/000000/google-logo.png\"></img>\n                    Log in with Google\n                </Button>\n                <Button id=\"signInWithEmail\"\n                onClick={()=> {\n                    // this.getGoogleConsent()\n                    this.componentToggle(2)\n                }}\n                >\n                    <img src=\"https://img.icons8.com/color/24/000000/secured-letter.png\"></img>\n                    Log in with email\n                </Button>\n                <Button id=\"createAccountWithEmail\"\n                onClick={()=> {\n                    // this.getGoogleConsent()\n                    this.componentToggle(3)\n                }}\n                >\n                    <img src=\"https://img.icons8.com/android/24/000000/add-user-male.png\"></img>\n                    Create new account with email\n                </Button>\n\n                <CSSTransition\n                in={this.state.showEmailSignIn}\n                timeout={400}\n                classNames=\"list-transition\"\n                unmountOnExit\n                appear\n                onEntered={this.listSwitch}\n                onExit={this.listSwitch}\n                >\n                    <div className=\"list-body\">\n                    <Button\n                    className=\"logInBackButton\"\n                    onClick={()=> {\n                        this.componentToggle(0)\n                    }}\n                    >\n                        <img src=\"https://img.icons8.com/android/24/000000/back.png\"></img>\n                        Back\n                    </Button>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"i.e. example@example.com\" value ={this.props.email} onChange={this.updateEmail.bind(this)} />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" value ={this.props.password} onChange={this.updatePassword.bind(this)} />\n                            <FormText color=\"muted\">\n                                Passwords must be no less than 8 characters.\n                            </FormText>\n                        </FormGroup>\n                        <div id=\"emailLogInSubmitButton\">\n                        <PostResource\n                            url=\"http://localhost:5000/api/users/login\"\n                            parentComp = \"logIn\"\n                            >\n                        </PostResource>\n                        </div>\n                    </Form>\n                    </div>\n                </CSSTransition>\n\n                <CSSTransition\n                in={this.state.showEmailSignIn}\n                timeout={400}\n                classNames=\"list-transition\"\n                unmountOnExit\n                appear\n                onEntered={this.listSwitch}\n                onExit={this.listSwitch}\n                >\n                <div className=\"list-body\">\n                    <Button\n                    className=\"logInBackButton\"\n                    onClick={()=> {\n                        this.componentToggle(0)\n                    }}\n                    >\n                        <img src=\"https://img.icons8.com/android/24/000000/back.png\"></img>\n                        Back\n                    </Button>\n                    \n                    <Container>\n                        <h2>Create Account</h2>\n                        <p>Fill out the form below to create an account.</p>\n                    </Container>\n                    <Container>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"i.e. example@example.com\" value ={this.props.newEmail} onChange={this.updateNewEmail.bind(this)} />\n                        </FormGroup> \n                        <FormGroup>\n                            <Label for=\"password\">Password</Label>\n                            <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" value ={this.props.newPassword} onChange={this.updateNewPassword.bind(this)} />\n                            <FormText color=\"muted\">\n                                Passwords must be no less than 8 characters.\n                            </FormText>\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"profpic\">Profile Picture</Label>\n                            <Input type=\"text\" name=\"profpic\" id=\"profpic\" placeholder=\"please add it as a url\" value ={this.props.newProfPicUrl} onChange={this.updateNewProfPicUrl.bind(this)} />\n                        </FormGroup>\n                        <PostResource\n                            url=\"http://localhost:5000/api/users/create\"\n                            parentComp = \"createAccount\"\n                            >\n                        </PostResource>\n                    </Form>\n                    </Container>\n                </div>\n                </CSSTransition>\n                </Container>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        email: state.cities.email,\n        password: state.cities.password,\n        newEmail: state.cities.newEmail,\n        newPassword: state.cities.newPassword,\n        newProfPicUrl: state.cities.newProfPicUrl,\n    }\n  }\n\nexport default connect(mapStateToProps)(LogIn)\n"]},"metadata":{},"sourceType":"module"}