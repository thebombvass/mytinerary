{"ast":null,"code":"// export const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// function receiveCities(json) {\n//   return {\n//     type: RECEIVE_CITIES,\n//     cities: json.data.children.map(child => child.data),\n//     receivedAt: Date.now()\n//   }\n// }\nexport function getCities() {\n  return dispatch => {\n    return fetch(\"http://localhost:5000/api/cities\").then(data => {\n      return data.json();\n    }).catch(error => {\n      return error;\n    });\n  };\n}\nexport function fetchCitiesAction(data) {\n  return {\n    type: 'FETCH_CITIES_REQUEST',\n    status: '200 OK',\n    response: data\n  };\n}\nexport function fetchCitiesErrorAction(error) {\n  return {\n    type: 'FETCH_CITIES_ERROR',\n    status: error,\n    response: \"\"\n  };\n}","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/store/actions/cityActions.js"],"names":["getCities","dispatch","fetch","then","data","json","catch","error","fetchCitiesAction","type","status","response","fetchCitiesErrorAction"],"mappings":"AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAO,SAASA,SAAT,GAAqB;AACxB,SAAOC,QAAD,IAAa;AACf,WAAOC,KAAK,CAAC,kCAAD,CAAL,CAA0CC,IAA1C,CAAgDC,IAAD,IAAS;AAE3D,aAAOA,IAAI,CAACC,IAAL,EAAP;AACH,KAHM,EAINC,KAJM,CAICC,KAAD,IAAU;AACb,aAAOA,KAAP;AACH,KANM,CAAP;AAOH,GARD;AASD;AAEH,OAAO,SAASC,iBAAT,CAA2BJ,IAA3B,EAAiC;AACpC,SAAO;AACHK,IAAAA,IAAI,EAAE,sBADH;AAEHC,IAAAA,MAAM,EAAE,QAFL;AAGHC,IAAAA,QAAQ,EAAEP;AAHP,GAAP;AAKH;AAED,OAAO,SAASQ,sBAAT,CAAgCL,KAAhC,EAAuC;AAC1C,SAAO;AACHE,IAAAA,IAAI,EAAE,oBADH;AAEHC,IAAAA,MAAM,EAAEH,KAFL;AAGHI,IAAAA,QAAQ,EAAE;AAHP,GAAP;AAKH","sourcesContent":["// export const RECEIVE_CITIES = 'RECEIVE_CITIES'\n// const RECEIVE_CITIES = 'RECEIVE_CITIES'\n\n\n// function receiveCities(json) {\n//   return {\n//     type: RECEIVE_CITIES,\n//     cities: json.data.children.map(child => child.data),\n//     receivedAt: Date.now()\n//   }\n// }\n\n\nexport function getCities() {\n    return(dispatch)=> {\n        return fetch(\"http://localhost:5000/api/cities\").then((data)=> {\n            \n            return data.json()\n        })\n        .catch((error)=> {\n            return error;\n        })\n    }\n  }\n\nexport function fetchCitiesAction(data) {\n    return {\n        type: 'FETCH_CITIES_REQUEST', \n        status: '200 OK', \n        response: data,\n    }\n}\n\nexport function fetchCitiesErrorAction(error) {\n    return {\n        type: 'FETCH_CITIES_ERROR', \n        status: error, \n        response: \"\",\n    }\n}\n"]},"metadata":{},"sourceType":"module"}