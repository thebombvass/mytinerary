{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PopularItineraries.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Carousel, CarouselItem } from 'reactstrap';\nimport { connect } from 'react-redux'; //components\n\nimport ItineraryCover from './ItineraryCover.js';\n\nclass PopularItineraries extends Component {\n  render() {\n    const cityCovers = [];\n    let newLen = 0;\n\n    if (this.props.cities.length % 4 !== 0) {\n      newLen = this.props.cities.length - this.props.cities.length % 4;\n    } else {\n      newLen = this.props.cities.length;\n    }\n\n    console.log(\"newLen \" + newLen);\n\n    for (let i = 0; i < newLen; i += 4) {\n      cityCovers.push(React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(CarouselItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i + 1].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i + 1].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i + 2].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i + 2].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[i + 3].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[i + 3].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))))));\n    }\n\n    if (this.props.cities.length % 4 !== 0) {\n      let restOflen = this.props.cities.length % 4;\n\n      for (let i = 0; i < newLen; i += 4) {}\n\n      cityCovers.push(React.createElement(ItineraryCover, {\n        imageUrl: this.props.cities[newLen].imageUrl,\n        styleInfo: \"PopularItineraries\",\n        cityName: this.props.cities[newLen].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n\n    console.log(cityCovers);\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, cityCovers));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state.cities.cities\n  };\n};\n\nexport default connect(mapStateToProps)(PopularItineraries);","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/PopularItineraries.js"],"names":["React","Component","Container","Row","Col","Carousel","CarouselItem","connect","ItineraryCover","PopularItineraries","render","cityCovers","newLen","props","cities","length","console","log","i","push","imageUrl","name","restOflen","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col, Carousel, CarouselItem } from 'reactstrap';\nimport { connect } from 'react-redux'\n//components\nimport ItineraryCover from './ItineraryCover.js'\n\n\nclass PopularItineraries extends Component {\n\n    render() {\n        const cityCovers = []\n        let newLen = 0;\n\n        if (this.props.cities.length%4 !==0) {\n            newLen = this.props.cities.length - this.props.cities.length%4\n        } else {\n            newLen = this.props.cities.length\n        }\n        console.log(\"newLen \"+newLen)\n        \n        for (let i=0; i<newLen; i+=4) {\n            cityCovers.push(\n                <div>\n                    <CarouselItem>\n                        <Row>\n                        <Col>\n                            <ItineraryCover\n                            imageUrl = {this.props.cities[i].imageUrl}\n                            styleInfo={\"PopularItineraries\"}\n                            cityName={this.props.cities[i].name}\n                            ></ItineraryCover>\n                        </Col>\n                        <Col>\n                            <ItineraryCover\n                            imageUrl = {this.props.cities[i+1].imageUrl}\n                            styleInfo={\"PopularItineraries\"}\n                            cityName={this.props.cities[i+1].name}\n                            ></ItineraryCover>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col>\n                            <ItineraryCover\n                            imageUrl = {this.props.cities[i+2].imageUrl}\n                            styleInfo={\"PopularItineraries\"}\n                            cityName={this.props.cities[i+2].name}\n                            ></ItineraryCover>\n                        </Col>\n                        <Col>\n                            <ItineraryCover\n                            imageUrl = {this.props.cities[i+3].imageUrl}\n                            styleInfo={\"PopularItineraries\"}\n                            cityName={this.props.cities[i+3].name}\n                            ></ItineraryCover>\n                        </Col>\n                        </Row> \n                    </CarouselItem>\n                    \n                </div>\n                    \n                    \n            )\n        }\n\n        if (this.props.cities.length%4 !== 0) {\n            let restOflen = this.props.cities.length%4\n            for (let i=0; i<newLen; i+=4) {\n            }\n        \n            cityCovers.push(\n                <ItineraryCover\n                imageUrl = {this.props.cities[newLen].imageUrl}\n                styleInfo={\"PopularItineraries\"}\n                cityName={this.props.cities[newLen].name}\n                ></ItineraryCover>\n            )\n        }\n\n        console.log(cityCovers)\n        \n        return(\n            <Container>\n                <Carousel>\n                  {cityCovers}  \n                </Carousel>\n                \n            </Container>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      cities: state.cities.cities,\n    }\n  }\n\nexport default connect(mapStateToProps)(PopularItineraries)\n"]},"metadata":{},"sourceType":"module"}