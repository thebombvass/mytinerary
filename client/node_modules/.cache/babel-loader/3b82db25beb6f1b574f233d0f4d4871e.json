{"ast":null,"code":"var _jsxFileName = \"/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/Cities.js\";\nimport React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid'; //components\n\nimport PostResource from './PostResource';\nexport default class Cities extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      cities: null,\n      search: \"\",\n      filteredResults: [],\n      newCity: \"\",\n      newCountry: \"\",\n      newUrl: \"\"\n    };\n    this.updateCitiesAfterPost = this.updateCitiesAfterPost.bind(this);\n  }\n\n  async componentDidMount() {\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      cities: data\n    });\n    this.setState({\n      loading: false\n    });\n    this.setState({\n      filteredResults: data\n    });\n  }\n\n  async updateSearch(e) {\n    await this.setState({\n      search: e.target.value\n    });\n    await this.setState({\n      filteredResults: this.state.cities.filter(city => {\n        return city.name.indexOf(this.state.search) !== -1;\n      })\n    });\n  }\n\n  async updateNewCity(e) {\n    await this.setState({\n      newCity: e.target.value\n    });\n  }\n\n  async updateNewCountry(e) {\n    await this.setState({\n      newCountry: e.target.value\n    });\n  }\n\n  async updateNewUrl(e) {\n    await this.setState({\n      newUrl: e.target.value\n    });\n  }\n\n  async updateCitiesAfterPost() {\n    console.log('here');\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const newData = await response.json();\n    this.setState({\n      filteredResults: newData\n    });\n    this.setState({\n      newCity: \"\"\n    });\n    this.setState({\n      newCountry: \"\"\n    });\n    console.log(this.state.filteredResults);\n  } // sendNewCity(name, country, imageUrl) {\n  // }\n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" Add City: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newCity,\n      onChange: this.updateNewCity.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \" Country: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newCountry,\n      onChange: this.updateNewCountry.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" Image URL: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.newUrl,\n      onChange: this.updateNewUrl.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(PostResource, {\n      url: \"http://localhost:5000/api/cities\",\n      dataObject: {\n        \"name\": this.state.newCity,\n        \"country\": this.state.newCountry,\n        \"imageUrl\": this.state.newUrl\n      },\n      action: this.updateCitiesAfterPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Search List: \"), React.createElement(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"loading...\") : React.createElement(TransitionGroup, {\n      className: \"cities-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.filteredResults.map(({\n      id,\n      name,\n      country\n    }) => React.createElement(CSSTransition, {\n      key: id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, country)))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/meganvomvas/Desktop/Kod/UbiqumJava/my-app/client/src/components/Cities.js"],"names":["React","Component","Container","ListGroup","ListGroupItem","Button","CSSTransition","TransitionGroup","uuid","PostResource","Cities","constructor","props","state","loading","cities","search","filteredResults","newCity","newCountry","newUrl","updateCitiesAfterPost","bind","componentDidMount","url","response","fetch","data","json","console","log","setState","updateSearch","e","target","value","filter","city","name","indexOf","updateNewCity","updateNewCountry","updateNewUrl","newData","render","map","id","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport uuid from 'uuid';\n\n//components\nimport PostResource from './PostResource';\n\nexport default class Cities extends Component {\n  constructor(props) {\n    super(props)\n\n    this.updateCitiesAfterPost = this.updateCitiesAfterPost.bind(this);\n  }\n  \n  state = {\n    loading: true,\n    cities: null,\n    search: \"\",\n    filteredResults: [],\n    newCity: \"\",\n    newCountry: \"\",\n    newUrl: \"\",\n  }\n  \n  async componentDidMount() {\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    this.setState({cities: data});\n    this.setState({loading: false});\n    this.setState({filteredResults: data})\n  }\n\n  async updateSearch(e) {\n    await this.setState({search: e.target.value});\n    await this.setState({filteredResults: this.state.cities.filter( (city) =>{\n      return city.name.indexOf(this.state.search) !== -1;\n    })})\n  }\n\n  async updateNewCity(e) {\n    await this.setState({newCity: e.target.value});\n  }\n\n  async updateNewCountry(e) {\n    await this.setState({newCountry: e.target.value});\n  }\n\n  async updateNewUrl(e) {\n    await this.setState({newUrl: e.target.value});\n  }\n\n  async updateCitiesAfterPost() {\n    console.log('here')\n    const url = \"http://localhost:5000/api/cities\";\n    const response = await fetch(url);\n    const newData = await response.json();\n    this.setState({filteredResults: newData});\n    this.setState({newCity: \"\"});\n    this.setState({newCountry: \"\"});\n    console.log(this.state.filteredResults);\n  }\n\n  // sendNewCity(name, country, imageUrl) {\n\n  // }\n\n  render() {\n    return (\n      <Container>\n\n        <h1>Cities</h1>\n\n        <label htmlFor=\"searchBar\"> Add City: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newCity} onChange={this.updateNewCity.bind(this)}></input>\n        <label htmlFor=\"searchBar\"> Country: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newCountry} onChange={this.updateNewCountry.bind(this)}></input>\n        <label htmlFor=\"searchBar\"> Image URL: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.newUrl} onChange={this.updateNewUrl.bind(this)}></input>\n\n        <PostResource url=\"http://localhost:5000/api/cities\" dataObject={{\"name\": this.state.newCity, \"country\": this.state.newCountry, \"imageUrl\": this.state.newUrl}} action={this.updateCitiesAfterPost}>  \n        </PostResource>\n\n        <label htmlFor=\"searchBar\"> Search List: </label>\n        <input id=\"searchBar\" type=\"text\" value ={this.state.search} onChange={this.updateSearch.bind(this)}></input>\n\n        <ListGroup>\n          {this.state.loading ? <p>loading...</p> : \n          <TransitionGroup className=\"cities-list\">\n            {this.state.filteredResults.map(({ id, name, country }) => (\n              <CSSTransition key={id} timeout={500} classNames=\"fade\">\n                <ListGroupItem>\n                  <p>{name}</p><p>{country}</p>\n                </ListGroupItem>\n              </CSSTransition>\n            ))}\n          </TransitionGroup>\n          }\n        </ListGroup>\n      </Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}